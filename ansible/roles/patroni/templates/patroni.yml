scope: postgres
namespace: /db/
name: "{{ ansible_hostname }}"

restapi:
    listen: "{{ hostvars[inventory_hostname]['ansible_facts']['eth0']['ipv4']['address'] }}:8008"
    connect_address: "{{ hostvars[inventory_hostname]['ansible_facts']['eth0']['ipv4']['address'] }}:8008"

etcd:
    host: db0:2379, db1:2379, db2:2379

bootstrap:
  dcs:
    ttl: 30
    loop_wait: 10
    retry_timeout: 10
    maximum_lag_on_failover: 1048576
    postgresql:
      use_pg_rewind: true
      use_slots: true
      parameters:

  initdb:
  - encoding: UTF8
  - data-checksums

  pg_hba:
  - host replication replicator 127.0.0.1/32 md5
  - host replication replicator samenet md5
  - host all all 0.0.0.0/0 md5

  users:
    admin:
      password: admin
      options:
        - createrole
        - createdb

postgresql:
  listen: "{{ hostvars[inventory_hostname]['ansible_facts']['eth0']['ipv4']['address'] }}:5432"
  connect_address: "{{ hostvars[inventory_hostname]['ansible_facts']['eth0']['ipv4']['address'] }}:5432"
  data_dir: /data/patroni
  pgpass: /tmp/pgpass
  authentication:
    replication:
      username: replicator
      password: replicator
    superuser:
      username: postgres
      password: postgres
  parameters:
      unix_socket_directories: '.'

tags:
    nofailover: false
    noloadbalance: false
    clonefrom: false
    nosync: false
